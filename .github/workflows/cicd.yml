name: Initial configuration
on:
  push:
    branches:
      - FrTrial

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Build docker image
        run: docker build -t jasonnho/devops-pso .

      - name: Login to docker hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Publish image to docker hub
        run: docker push jasonnho/devops-pso:latest

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull image from docker hub
        run: docker pull jasonnho/devops-pso:latest
      - name: Run Jest tests
        run: |
          docker run --rm jasonnho/devops-pso:latest sh -c "npm install && npm test"

  terraform:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Pull image from docker hub
        run: docker pull jasonnho/devops-pso:latest

      - name: Upload SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key-pair-devopspso.pem
          chmod 400 "key-pair-devopspso.pem"
          chmod 600 "key-pair-devopspso.pem"

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -T -i "key-pair-devopspso.pem" ubuntu@ec2-3-27-78-30.ap-southeast-2.compute.amazonaws.com << 'EOF'
            sudo apt update && sudo apt upgrade -y
            sudo docker pull jasonnho/devops-pso:latest
            sudo docker rm -f devops-pso-container || true
            sudo docker run --privileged -d -p 3000:3000 --name devops-pso-container jasonnho/devops-pso
            sudo docker logs devops-pso-container
          EOF

